plugins {
    id 'application'
}

application {
    mainClassName = 'montecarlo.MaestroServer'  // Change this to your actual main class
}

repositories {
    mavenCentral()
}

task createGeneratedSourcesDir() {
    doLast {
        file('generated-sources/MonteCarlo').mkdirs()
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.zeroc.com/nexus/content/repositories/releases' }
}

// Slice compilation task
task compileSlice(type: Exec) {
    commandLine 'slice2java', 'src/main/resources/config.ice', '--output-dir', 'generated-sources'
}

// Ensure the directory is created before running the slice compiler
compileSlice.dependsOn createGeneratedSourcesDir

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    implementation 'com.zeroc:ice:3.7.9'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task runTrabajadorServer(type: JavaExec) {
    mainClass = 'montecarlo.TrabajadorServer'
    classpath = sourceSets.main.runtimeClasspath
    args = ['--Ice.Config=trabajador1.config'] // Asegúrate de que esta línea esté presente
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'generated-sources']
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

compileJava.dependsOn compileSlice